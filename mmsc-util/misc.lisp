;;; The simplest thing to do with this:
;;; 
;;; (write-p2t-setup-cmds t *execs*)
;;;

(in-package :com.github.dkick.mmsc-util)

(defgeneric write-p2t-setup-cmds (where execs &key))

(defmethod write-p2t-setup-cmds ((where (eql t)) execs &key)
  (write-p2t-setup-cmds *standard-output* execs))

(defmethod write-p2t-setup-cmds ((where string) execs &rest args)
  (with-open-stream (stream (apply #'open where args))
    (write-p2t-setup-cmds stream execs)))

(defmethod write-p2t-setup-cmds ((where stream) execs &key)
  (let ((*overrides* *overrides*))
    (unless (equalp (snet-volume *overrides*) *default-overrides-volume*)
      (setf (snet-volume *overrides*) *default-overrides-volume*))
    (with-terminals ((bash 'bash-shell where) (tacl 'tacl-shell where))
      (cmd-send-execs bash execs) (terpri where)
      (cmd-sql-compiles tacl execs) (terpri where)
      (cmd-backup-mmexec tacl execs) (terpri where)
      (cmd-move-execs-to-mmexec tacl execs) (terpri where)
      (when (cmd-restart-web-server tacl execs :start-osh t) (terpri where))
      (cmd-stop-mmexec-start-execs tacl) (terpri where)
      (cmd-move-execs-from-mmexec tacl execs) (terpri where)
      (cmd-restore-mmexec tacl execs) (terpri where)
      (cmd-stop-execs tacl) (terpri where)
      (when (cmd-restart-web-server tacl execs) (terpri where))
      (values))))

(defun remote-p2t-setup (execs)
  (let ((*overrides* *overrides*))
    (unless (equalp (snet-volume *overrides*) *default-overrides-volume*)
      (setf (snet-volume *overrides*) *default-overrides-volume*))
    (with-terminals ((ftp 'ftp-shell nil) (tacl 'tacl-shell 'telnet))
      (cmd-send-execs ftp execs)
      (cmd-sql-compiles tacl execs)
      (cmd-backup-mmexec tacl execs)
      (cmd-move-execs-to-mmexec tacl execs)
      (cmd-restart-web-server tacl execs)
      (cmd-stop-mmexec-start-execs tacl))))

(defun remote-p2t-restore (execs)
  (let ((*overrides* *overrides*))
    (unless (equalp (snet-volume *overrides*) *default-overrides-volume*)
      (setf (snet-volume *overrides*) *default-overrides-volume*))
    (with-terminal (tacl 'tacl-shell 'telnet)
      (cmd-move-execs-from-mmexec tacl execs)
      (cmd-restore-mmexec tacl execs)
      (cmd-stop-execs tacl)
      (cmd-restart-web-server tacl execs))))

(defun remote-p2t-put-execs-to-rdkexe (execs)
  (let ((*overrides* *overrides*))
    (unless (equalp (snet-volume *overrides*) *default-overrides-volume*)
      (setf (snet-volume *overrides*) *default-overrides-volume*))
    (with-terminals ((ftp 'ftp-shell nil) (tacl 'tacl-shell 'telnet))
      (cmd-send-execs ftp execs)
      (cmd-sql-compiles tacl execs))))

(defun remote-p2t-setup-from-rdkexe (execs)
  (let ((*overrides* *overrides*))
    (unless (equalp (snet-volume *overrides*) *default-overrides-volume*)
      (setf (snet-volume *overrides*) *default-overrides-volume*))
    (with-terminals ((ftp 'ftp-shell nil) (tacl 'tacl-shell 'telnet))
      (cmd-backup-mmexec tacl execs)
      (cmd-move-execs-to-mmexec tacl execs)
      (cmd-restart-web-server tacl execs)
      (cmd-stop-mmexec-start-execs tacl))))
